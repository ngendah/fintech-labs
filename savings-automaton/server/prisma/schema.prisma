// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

// 2025-08-06 11:58

model User {
  id          Int         @default(autoincrement()) @id
  email       String      @unique
  name        String?
  password    String
  createdAt  DateTime    @default(now())
  savingSchedules SavingSchedule[]
  savings Saving[]
}

enum Frequency {
  Daily
  Weekly
  Monthly
}

enum Telco {
  Safaricom
  Airtel
  Equitel
}

model SavingSchedule {
  id          Int       @default(autoincrement()) @id
  mobileNumber String
  telco       Telco
  reference   String    @default(uuid())
  amount      Decimal   @default(0)
  frequency   Frequency @default(Monthly)
  startDate   DateTime
  nextRunAt   DateTime
  isActive    Boolean   @default(true)
  createdAt   DateTime  @default(now())
  user        User      @relation(fields: [userId], references: [id])
  userId      Int       @unique
  savingLogs  SavingLog[]
}

enum Status{
  SUCCESS
  FAILED
}

model SavingLog {
  id          Int       @default(autoincrement()) @id
  executedAt  DateTime
  status      Status
  message     String?
  schedule    SavingSchedule  @relation(fields: [scheduleId], references: [id])
  scheduleId  Int       @unique
}

// 2025-08-08 19:54

model Saving {
  id          Int       @default(autoincrement()) @id
  amount      Decimal   @default(0)
  createdAt   DateTime  @default(now())
  user        User      @relation(fields: [userId], references: [id])
  userId      Int       @unique
  reference   String
}

model ServiceCharge {
  id          Int       @default(autoincrement()) @id
  amount      Decimal   @default(0)
  createdAt   DateTime  @default(now())
  reference   String
}
